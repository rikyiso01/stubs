from typing import overload
from collections.abc import Callable
from mte.typevar import Func

@overload
def njit(*, parallel: bool = ...) -> Callable[[Func], Func]: ...
@overload
def njit(signature_or_function: Func) -> Func: ...
@overload
def jit(*, parallel: bool = ..., nopython: bool = ...) -> Callable[[Func], Func]: ...
@overload
def jit(signature_or_function: Func) -> Func: ...
@overload
def prange(stop: int, /) -> range: ...
@overload
def prange(start: int, stop: int, step: int = ...) -> range: ...
