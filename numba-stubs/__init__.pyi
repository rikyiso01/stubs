from typing import TypeVar, Any, overload
from collections.abc import Callable

_T = TypeVar("_T", bound=Callable[..., Any])

@overload
def njit(*, parallel: bool = ...) -> Callable[[_T], _T]: ...
@overload
def njit(signature_or_function: _T) -> _T: ...
@overload
def jit(*, parallel: bool = ..., nopython: bool = ...) -> Callable[[_T], _T]: ...
@overload
def jit(signature_or_function: _T) -> _T: ...
@overload
def prange(stop: int, /) -> range: ...
@overload
def prange(start: int, stop: int, step: int = ...) -> range: ...
