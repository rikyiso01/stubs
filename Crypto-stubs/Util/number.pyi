from collections.abc import Callable

def GCD(x: int, y: int) -> int: ...
def bytes_to_long(s: bytes) -> int: ...
def ceil_div(n: int, d: int) -> int: ...
def getPrime(N: int, randfunc: Callable[[int], bytes] = ...) -> int: ...
def getStrongPrime(N: int) -> int: ...
def inverse(u: int, v: int) -> int: ...
def isPrime(N: int) -> bool: ...
def long_to_bytes(n: int) -> bytes: ...
def size(N: int) -> int: ...
